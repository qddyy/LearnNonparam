[{"path":"https://qddyy.github.io/LearnNonparam/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://qddyy.github.io/LearnNonparam/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://qddyy.github.io/LearnNonparam/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yan Du. Author, maintainer.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Du Y (2024). LearnNonparam: 'R6'-Based Flexible Framework Permutation Tests. R package version 1.2.5, https://qddyy.github.io/LearnNonparam/, https://github.com/qddyy/LearnNonparam.","code":"@Manual{,   title = {LearnNonparam: 'R6'-Based Flexible Framework for Permutation Tests},   author = {Yan Du},   year = {2024},   note = {R package version 1.2.5, https://qddyy.github.io/LearnNonparam/},   url = {https://github.com/qddyy/LearnNonparam}, }"},{"path":[]},{"path":"https://qddyy.github.io/LearnNonparam/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"R6-Based Flexible Framework for Permutation Tests","text":"R package implements several non-parametric tests chapters 1-5 Higgins (2004), including tests one sample, two samples, k samples, paired comparisons, blocked designs, trends association. Built Rcpp efficiency R6 flexible, object-oriented design, provides unified framework performing creating custom permutation tests.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R6-Based Flexible Framework for Permutation Tests","text":"Install stable version CRAN: Install development version Github:","code":"install.packages(\"LearnNonparam\") # install.packages(\"remotes\") remotes::install_github(\"qddyy/LearnNonparam\")"},{"path":"https://qddyy.github.io/LearnNonparam/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"R6-Based Flexible Framework for Permutation Tests","text":"Construct test object R6 class directly using pmt (permutation test) wrapper Provide samples  Check results      Modify settings observe change  define_pmt allows users define new permutation tests. Take two-sample Cramér-Von Mises test example:","code":"library(LearnNonparam) options(LearnNonparam.pmt_progress = TRUE) t <- Wilcoxon$new(n_permu = 1e6) # recommended for a unified API t <- pmt(\"twosample.wilcoxon\", n_permu = 1e6) set.seed(-1)  t$test(rnorm(10, 1), rnorm(10, 0)) t$statistic t$p_value options(digits = 3)  t$print() ggplot2::theme_set(ggplot2::theme_minimal())  t$plot(style = \"ggplot2\", binwidth = 1) t$type <- \"asymp\" t$p_value t <- define_pmt(     # this is a two-sample permutation test     inherit = \"twosample\",     statistic = function(x, y) {         # (optional) pre-calculate certain constants that remain invariant during permutation         n_x <- length(x)         n_y <- length(y)         F_x <- seq_len(n_x) / n_x         G_y <- seq_len(n_y) / n_y         # return a closure to calculate the test statistic         function(x, y) {             x <- sort.int(x)             y <- sort.int(y)             F <- approxfun(x, F_x, \"constant\", 0, 1)             G <- approxfun(y, G_y, \"constant\", 0, 1)             sum(c(F_x - G(x), G_y - F(y))^2)         }     },     # reject the null hypothesis when the test statistic is large     rejection = \"r\",     name = \"Two-Sample Cramér-Von Mises Test\",     alternative = \"samples are from different continuous distributions\" )  t$test(rnorm(10), runif(10))$print()"},{"path":[]},{"path":"https://qddyy.github.io/LearnNonparam/reference/AnsariBradley.html","id":null,"dir":"Reference","previous_headings":"","what":"Ansari-Bradley Test — AnsariBradley","title":"Ansari-Bradley Test — AnsariBradley","text":"Performs Ansari-Bradley test samples.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/AnsariBradley.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Ansari-Bradley Test — AnsariBradley","text":"LearnNonparam::PermuTest -> LearnNonparam::TwoSampleTest -> AnsariBradley","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/AnsariBradley.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Ansari-Bradley Test — AnsariBradley","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/AnsariBradley.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Ansari-Bradley Test — AnsariBradley","text":"AnsariBradley$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/AnsariBradley.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Ansari-Bradley Test — AnsariBradley","text":"Create new AnsariBradley object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/AnsariBradley.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ansari-Bradley Test — AnsariBradley","text":"","code":"AnsariBradley$new(   type = c(\"permu\", \"asymp\"),   alternative = c(\"two_sided\", \"less\", \"greater\"),   n_permu = 10000 )"},{"path":"https://qddyy.github.io/LearnNonparam/reference/AnsariBradley.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ansari-Bradley Test — AnsariBradley","text":"type character string specifying way calculate p-value. alternative character string specifying alternative hypothesis. n_permu integer indicating number permutations permutation distribution. set 0, permutations used.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/AnsariBradley.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Ansari-Bradley Test — AnsariBradley","text":"AnsariBradley object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/AnsariBradley.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ansari-Bradley Test — AnsariBradley","text":"","code":"pmt(     \"twosample.ansari\",     alternative = \"greater\", n_permu = 0 )$test(Table2.8.1)$print() #>  #>  \t Ansari-Bradley Test  #>  #> scoring: Ansari-Bradley rank    type: permu(252)    method: default #> statistic = 13, p-value = 0.2698413 #> alternative hypothesis: true ratio of scales is greater than 1"},{"path":"https://qddyy.github.io/LearnNonparam/reference/CDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Inference on Cumulative Distribution Function — CDF","title":"Inference on Cumulative Distribution Function — CDF","text":"Performs statistical inference population cumulative distribution function.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/CDF.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Inference on Cumulative Distribution Function — CDF","text":"LearnNonparam::PermuTest -> LearnNonparam::OneSampleTest -> CDF","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/CDF.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Inference on Cumulative Distribution Function — CDF","text":"LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/CDF.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Inference on Cumulative Distribution Function — CDF","text":"CDF$new() CDF$plot()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/CDF.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Inference on Cumulative Distribution Function — CDF","text":"Create new CDF object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/CDF.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inference on Cumulative Distribution Function — CDF","text":"","code":"CDF$new(conf_level = 0.95)"},{"path":"https://qddyy.github.io/LearnNonparam/reference/CDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inference on Cumulative Distribution Function — CDF","text":"conf_level number specifying confidence level confidence bounds.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/CDF.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Inference on Cumulative Distribution Function — CDF","text":"CDF object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/CDF.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"Inference on Cumulative Distribution Function — CDF","text":"Plot estimate confidence bounds population cumulative distribution function.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/CDF.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Inference on Cumulative Distribution Function — CDF","text":"","code":"CDF$plot(style = c(\"graphics\", \"ggplot2\"))"},{"path":"https://qddyy.github.io/LearnNonparam/reference/CDF.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inference on Cumulative Distribution Function — CDF","text":"style character string specifying package use.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/CDF.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Inference on Cumulative Distribution Function — CDF","text":"object (invisibly).","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/CDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inference on Cumulative Distribution Function — CDF","text":"","code":"pmt(\"onesample.cdf\")$test(Table1.2.1)$plot(style = \"graphic\")"},{"path":"https://qddyy.github.io/LearnNonparam/reference/ChiSquare.html","id":null,"dir":"Reference","previous_headings":"","what":"Chi-Square Test on Contingency Table — ChiSquare","title":"Chi-Square Test on Contingency Table — ChiSquare","text":"Performs chi-square test contingency tables.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/ChiSquare.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Chi-Square Test on Contingency Table — ChiSquare","text":"LearnNonparam::PermuTest -> LearnNonparam::ContingencyTableTest -> ChiSquare","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/ChiSquare.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Chi-Square Test on Contingency Table — ChiSquare","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/ChiSquare.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Chi-Square Test on Contingency Table — ChiSquare","text":"ChiSquare$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/ChiSquare.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Chi-Square Test on Contingency Table — ChiSquare","text":"Create new ChiSquare object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/ChiSquare.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chi-Square Test on Contingency Table — ChiSquare","text":"","code":"ChiSquare$new(type = c(\"permu\", \"asymp\"), n_permu = 10000)"},{"path":"https://qddyy.github.io/LearnNonparam/reference/ChiSquare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chi-Square Test on Contingency Table — ChiSquare","text":"type character string specifying way calculate p-value. n_permu integer indicating number permutations permutation distribution. set 0, permutations used.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/ChiSquare.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Chi-Square Test on Contingency Table — ChiSquare","text":"ChiSquare object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/ChiSquare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chi-Square Test on Contingency Table — ChiSquare","text":"","code":"t <- pmt(     \"table.chisq\", n_permu = 0 )$test(Table5.4.2)$print() #>  #>  \t Chi-Square Test on Contingency Table  #>  #> scoring: none    type: permu(210)    method: default #> statistic = 4.277778, p-value = 0.3142857  t$type <- \"asymp\" t #>  #>  \t Chi-Square Test on Contingency Table  #>  #> scoring: none    type: asymp    method: default #> statistic = 4.277778, p-value = 0.1177856"},{"path":"https://qddyy.github.io/LearnNonparam/reference/ContingencyTableTest.html","id":null,"dir":"Reference","previous_headings":"","what":"ContingencyTableTest Class — ContingencyTableTest","title":"ContingencyTableTest Class — ContingencyTableTest","text":"Abstract class tests contingency tables.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/ContingencyTableTest.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"ContingencyTableTest Class — ContingencyTableTest","text":"LearnNonparam::PermuTest -> ContingencyTableTest","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for Association Between Paired Samples — Correlation","title":"Test for Association Between Paired Samples — Correlation","text":"Performs correlation coefficient based two-sample association test samples.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Correlation.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Test for Association Between Paired Samples — Correlation","text":"LearnNonparam::PermuTest -> LearnNonparam::TwoSampleTest -> LearnNonparam::TwoSamplePairedTest -> LearnNonparam::TwoSampleAssociationTest -> Correlation","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Correlation.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Test for Association Between Paired Samples — Correlation","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Correlation.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Test for Association Between Paired Samples — Correlation","text":"Correlation$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Correlation.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Test for Association Between Paired Samples — Correlation","text":"Create new Correlation object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Correlation.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for Association Between Paired Samples — Correlation","text":"","code":"Correlation$new(   type = c(\"permu\", \"asymp\"),   method = c(\"pearson\", \"kendall\", \"spearman\"),   alternative = c(\"two_sided\", \"less\", \"greater\"),   n_permu = 10000 )"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for Association Between Paired Samples — Correlation","text":"type character string specifying way calculate p-value. method character string specifying correlation coefficient used. alternative character string specifying alternative hypothesis. n_permu integer indicating number permutations permutation distribution. set 0, permutations used.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Correlation.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Test for Association Between Paired Samples — Correlation","text":"Correlation object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Correlation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for Association Between Paired Samples — Correlation","text":"","code":"pmt(     \"association.corr\", method = \"pearson\",     alternative = \"greater\", n_permu = 10000 )$test(Table5.1.2)$print() #>  #>  \t Test for Association Between Paired Samples  #>  #> scoring: none    type: permu(10000)    method: pearson #> statistic = 198766597, p-value < 2.220446e-16 #> alternative hypothesis: true correlation is greater than 0  t <- pmt(     \"association.corr\", method = \"spearman\",     alternative = \"two_sided\", n_permu = 10000 )$test(Table5.1.2)$print() #>  #>  \t Test for Association Between Paired Samples  #>  #> scoring: rank    type: permu(10000)    method: spearman #> statistic = 2059, p-value < 2.220446e-16 #> alternative hypothesis: true rho is not equal to 0  t$type <- \"asymp\" t #>  #>  \t Test for Association Between Paired Samples  #>  #> scoring: rank    type: asymp    method: spearman #> statistic = 0.8968008, p-value = 0.0002176436 #> alternative hypothesis: true rho is not equal to 0  t <- pmt(     \"association.corr\", method = \"kendall\",     alternative = \"greater\", n_permu = 0 )$test(Table5.2.2)$print() #>  #>  \t Test for Association Between Paired Samples  #>  #> scoring: rank    type: permu(151200)    method: kendall #> statistic = 0.2222222, p-value = 0.187672 #> alternative hypothesis: true tau is greater than 0  t$type <- \"asymp\" t #>  #>  \t Test for Association Between Paired Samples  #>  #> scoring: rank    type: asymp    method: kendall #> statistic = 0.2222222, p-value = 0.1697136 #> alternative hypothesis: true tau is greater than 0"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Difference.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-Sample Test Based on Mean or Median — Difference","title":"Two-Sample Test Based on Mean or Median — Difference","text":"Performs mean/median based two-sample test samples.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Difference.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Two-Sample Test Based on Mean or Median — Difference","text":"LearnNonparam::PermuTest -> LearnNonparam::TwoSampleTest -> LearnNonparam::TwoSampleLocationTest -> Difference","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Difference.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Two-Sample Test Based on Mean or Median — Difference","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Difference.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Two-Sample Test Based on Mean or Median — Difference","text":"Difference$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Difference.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Two-Sample Test Based on Mean or Median — Difference","text":"Create new Difference object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Difference.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-Sample Test Based on Mean or Median — Difference","text":"","code":"Difference$new(   method = c(\"mean\", \"median\"),   alternative = c(\"two_sided\", \"less\", \"greater\"),   null_value = 0,   n_permu = 10000 )"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Difference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-Sample Test Based on Mean or Median — Difference","text":"method character string specifying whether use mean median. alternative character string specifying alternative hypothesis. null_value number indicating true value location shift. n_permu integer indicating number permutations permutation distribution. set 0, permutations used.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Difference.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Two-Sample Test Based on Mean or Median — Difference","text":"Difference object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Difference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-Sample Test Based on Mean or Median — Difference","text":"","code":"pmt(     \"twosample.difference\", method = \"mean\",     alternative = \"greater\", n_permu = 0 )$test(Table2.1.1)$print()$plot(     style = \"graphic\", breaks = seq(-20, 25, length.out = 9) ) #>  #>  \t Two-Sample Test Based on Mean or Median  #>  #> scoring: none    type: permu(35)    method: mean #> statistic = 16.16667, p-value = 0.05714286 #> alternative hypothesis: greater   pmt(     \"twosample.difference\", method = \"mean\",     alternative = \"greater\", n_permu = 1000 )$test(Table2.3.1)$print() #>  #>  \t Two-Sample Test Based on Mean or Median  #>  #> scoring: none    type: permu(1000)    method: mean #> statistic = 1.675, p-value = 0.184 (± 0.02401608 at 95% confidence) #> alternative hypothesis: greater"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Friedman.html","id":null,"dir":"Reference","previous_headings":"","what":"Friedman Test — Friedman","title":"Friedman Test — Friedman","text":"Performs Friedman test samples collected randomized complete block design.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Friedman.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Friedman Test — Friedman","text":"LearnNonparam::PermuTest -> LearnNonparam::RCBDTest -> Friedman","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Friedman.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Friedman Test — Friedman","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Friedman.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Friedman Test — Friedman","text":"Friedman$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Friedman.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Friedman Test — Friedman","text":"Create new Friedman object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Friedman.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Friedman Test — Friedman","text":"","code":"Friedman$new(type = c(\"permu\", \"asymp\"), n_permu = 10000)"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Friedman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Friedman Test — Friedman","text":"type character string specifying way calculate p-value. n_permu integer indicating number permutations permutation distribution. set 0, permutations used.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Friedman.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Friedman Test — Friedman","text":"Friedman object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Friedman.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Friedman Test — Friedman","text":"","code":"t <- pmt(     \"rcbd.friedman\", n_permu = 0 )$test(Table4.5.3)$print() #>  #>  \t Friedman Test  #>  #> scoring: rank    type: permu(576)    method: default #> statistic = 28.33333, p-value = 0.04166667  t$type <- \"asymp\" t #>  #>  \t Friedman Test  #>  #> scoring: rank    type: asymp    method: default #> statistic = 7.5, p-value = 0.05755845"},{"path":"https://qddyy.github.io/LearnNonparam/reference/JonckheereTerpstra.html","id":null,"dir":"Reference","previous_headings":"","what":"Jonckheere-Terpstra Test — JonckheereTerpstra","title":"Jonckheere-Terpstra Test — JonckheereTerpstra","text":"Performs Jonckheere-Terpstra test samples.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/JonckheereTerpstra.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Jonckheere-Terpstra Test — JonckheereTerpstra","text":"LearnNonparam::PermuTest -> LearnNonparam::KSampleTest -> JonckheereTerpstra","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/JonckheereTerpstra.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Jonckheere-Terpstra Test — JonckheereTerpstra","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/JonckheereTerpstra.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Jonckheere-Terpstra Test — JonckheereTerpstra","text":"JonckheereTerpstra$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/JonckheereTerpstra.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Jonckheere-Terpstra Test — JonckheereTerpstra","text":"Create new JonckheereTerpstra object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/JonckheereTerpstra.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jonckheere-Terpstra Test — JonckheereTerpstra","text":"","code":"JonckheereTerpstra$new(   type = c(\"permu\", \"asymp\"),   alternative = c(\"two_sided\", \"less\", \"greater\"),   n_permu = 10000 )"},{"path":"https://qddyy.github.io/LearnNonparam/reference/JonckheereTerpstra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jonckheere-Terpstra Test — JonckheereTerpstra","text":"type character string specifying way calculate p-value. alternative character string specifying alternative hypothesis. n_permu integer indicating number permutations permutation distribution. set 0, permutations used.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/JonckheereTerpstra.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Jonckheere-Terpstra Test — JonckheereTerpstra","text":"JonckheereTerpstra object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/JonckheereTerpstra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jonckheere-Terpstra Test — JonckheereTerpstra","text":"","code":"t <- pmt(     \"ksample.jt\", alternative = \"greater\" )$test(Table3.4.1)$print() #>  #>  \t Jonckheere-Terpstra Test  #>  #> scoring: none    type: permu(10000)    method: default #> statistic = 145, p-value = 0.0298 (± 0.003332628 at 95% confidence) #> alternative hypothesis: greater  t$type <- \"asymp\" t #>  #>  \t Jonckheere-Terpstra Test  #>  #> scoring: none    type: asymp    method: default #> statistic = 145, p-value = 0.0285154 #> alternative hypothesis: greater"},{"path":"https://qddyy.github.io/LearnNonparam/reference/KSampleTest.html","id":null,"dir":"Reference","previous_headings":"","what":"KSampleTest Class — KSampleTest","title":"KSampleTest Class — KSampleTest","text":"Abstract class k-sample tests.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/KSampleTest.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"KSampleTest Class — KSampleTest","text":"LearnNonparam::PermuTest -> KSampleTest","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/KolmogorovSmirnov.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-Sample Kolmogorov-Smirnov Test — KolmogorovSmirnov","title":"Two-Sample Kolmogorov-Smirnov Test — KolmogorovSmirnov","text":"Performs two-sample Kolmogorov-Smirnov test samples.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/KolmogorovSmirnov.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Two-Sample Kolmogorov-Smirnov Test — KolmogorovSmirnov","text":"LearnNonparam::PermuTest -> LearnNonparam::TwoSampleTest -> KolmogorovSmirnov","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/KolmogorovSmirnov.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Two-Sample Kolmogorov-Smirnov Test — KolmogorovSmirnov","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/KolmogorovSmirnov.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Two-Sample Kolmogorov-Smirnov Test — KolmogorovSmirnov","text":"KolmogorovSmirnov$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/KolmogorovSmirnov.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Two-Sample Kolmogorov-Smirnov Test — KolmogorovSmirnov","text":"Create new KolmogorovSmirnov object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/KolmogorovSmirnov.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-Sample Kolmogorov-Smirnov Test — KolmogorovSmirnov","text":"","code":"KolmogorovSmirnov$new(n_permu = 10000)"},{"path":"https://qddyy.github.io/LearnNonparam/reference/KolmogorovSmirnov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-Sample Kolmogorov-Smirnov Test — KolmogorovSmirnov","text":"n_permu integer indicating number permutations permutation distribution. set 0, permutations used.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/KolmogorovSmirnov.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Two-Sample Kolmogorov-Smirnov Test — KolmogorovSmirnov","text":"KolmogorovSmirnov object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/KolmogorovSmirnov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-Sample Kolmogorov-Smirnov Test — KolmogorovSmirnov","text":"","code":"pmt(     \"twosample.ks\", n_permu = 0 )$test(Table2.8.1)$print() #>  #>  \t Two-Sample Kolmogorov-Smirnov Test  #>  #> scoring: none    type: permu(252)    method: default #> statistic = 0.4, p-value = 0.8730159"},{"path":"https://qddyy.github.io/LearnNonparam/reference/KruskalWallis.html","id":null,"dir":"Reference","previous_headings":"","what":"Kruskal-Wallis Test — KruskalWallis","title":"Kruskal-Wallis Test — KruskalWallis","text":"Performs Kruskal-Wallis test samples.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/KruskalWallis.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Kruskal-Wallis Test — KruskalWallis","text":"LearnNonparam::PermuTest -> LearnNonparam::KSampleTest -> KruskalWallis","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/KruskalWallis.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Kruskal-Wallis Test — KruskalWallis","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/KruskalWallis.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Kruskal-Wallis Test — KruskalWallis","text":"KruskalWallis$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/KruskalWallis.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Kruskal-Wallis Test — KruskalWallis","text":"Create new KruskalWallis object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/KruskalWallis.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kruskal-Wallis Test — KruskalWallis","text":"","code":"KruskalWallis$new(   type = c(\"permu\", \"asymp\"),   scoring = c(\"rank\", \"vw\", \"expon\"),   n_permu = 10000 )"},{"path":"https://qddyy.github.io/LearnNonparam/reference/KruskalWallis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kruskal-Wallis Test — KruskalWallis","text":"type character string specifying way calculate p-value. scoring character string specifying scoring system. n_permu integer indicating number permutations permutation distribution. set 0, permutations used.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/KruskalWallis.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Kruskal-Wallis Test — KruskalWallis","text":"KruskalWallis object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/KruskalWallis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kruskal-Wallis Test — KruskalWallis","text":"","code":"pmt(     \"ksample.kw\", type = \"asymp\" )$test(Table3.2.2)$print() #>  #>  \t Kruskal-Wallis Test  #>  #> scoring: rank    type: asymp    method: default #> statistic = 17.14286, p-value = 0.0006605027  t <- pmt(     \"ksample.kw\", type = \"permu\" )$test(Table3.2.3)$print() #>  #>  \t Kruskal-Wallis Test  #>  #> scoring: rank    type: permu(10000)    method: default #> statistic = 8.246588, p-value = 0.0119 (± 0.002125309 at 95% confidence)  t$type <- \"asymp\" t #>  #>  \t Kruskal-Wallis Test  #>  #> scoring: rank    type: asymp    method: default #> statistic = 8.246588, p-value = 0.01619109"},{"path":"https://qddyy.github.io/LearnNonparam/reference/MultipleComparison.html","id":null,"dir":"Reference","previous_headings":"","what":"MultipleComparison Class — MultipleComparison","title":"MultipleComparison Class — MultipleComparison","text":"Abstract class multiple comparisons.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/MultipleComparison.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"MultipleComparison Class — MultipleComparison","text":"LearnNonparam::PermuTest -> LearnNonparam::KSampleTest -> MultipleComparison","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/OneSampleTest.html","id":null,"dir":"Reference","previous_headings":"","what":"OneSampleTest Class — OneSampleTest","title":"OneSampleTest Class — OneSampleTest","text":"Abstract class one-sample tests.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/OneSampleTest.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"OneSampleTest Class — OneSampleTest","text":"LearnNonparam::PermuTest -> OneSampleTest","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/OneSampleTest.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"OneSampleTest Class — OneSampleTest","text":"LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/OneSampleTest.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"OneSampleTest Class — OneSampleTest","text":"OneSampleTest$plot()","code":""},{"path":[]},{"path":"https://qddyy.github.io/LearnNonparam/reference/OneSampleTest.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OneSampleTest Class — OneSampleTest","text":"","code":"OneSampleTest$plot(...)"},{"path":"https://qddyy.github.io/LearnNonparam/reference/OneSampleTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OneSampleTest Class — OneSampleTest","text":"... ignored.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/OneWay.html","id":null,"dir":"Reference","previous_headings":"","what":"One-Way Test for Equal Means — OneWay","title":"One-Way Test for Equal Means — OneWay","text":"Performs F statistic based one-way test samples.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/OneWay.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"One-Way Test for Equal Means — OneWay","text":"LearnNonparam::PermuTest -> LearnNonparam::KSampleTest -> OneWay","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/OneWay.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"One-Way Test for Equal Means — OneWay","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/OneWay.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"One-Way Test for Equal Means — OneWay","text":"OneWay$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/OneWay.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"One-Way Test for Equal Means — OneWay","text":"Create new OneWay object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/OneWay.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-Way Test for Equal Means — OneWay","text":"","code":"OneWay$new(type = c(\"permu\", \"asymp\"), n_permu = 10000)"},{"path":"https://qddyy.github.io/LearnNonparam/reference/OneWay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One-Way Test for Equal Means — OneWay","text":"type character string specifying way calculate p-value. n_permu integer indicating number permutations permutation distribution. set 0, permutations used.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/OneWay.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"One-Way Test for Equal Means — OneWay","text":"OneWay object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/OneWay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"One-Way Test for Equal Means — OneWay","text":"","code":"# \\donttest{ t <- pmt(     \"ksample.oneway\", n_permu = 0 )$test(Table3.1.2)$print() #>  #>  \t One-Way Test for Equal Means  #>  #> scoring: none    type: permu(756756)    method: default #> statistic = 11552.89, p-value = 0.05127412  t$type <- \"asymp\" t #>  #>  \t One-Way Test for Equal Means  #>  #> scoring: none    type: asymp    method: default #> statistic = 3.781445, p-value = 0.05327082 # }"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Page.html","id":null,"dir":"Reference","previous_headings":"","what":"Page Test — Page","title":"Page Test — Page","text":"Performs Page test samples collected randomized complete block design.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Page.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Page Test — Page","text":"LearnNonparam::PermuTest -> LearnNonparam::RCBDTest -> Page","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Page.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Page Test — Page","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Page.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Page Test — Page","text":"Page$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Page.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Page Test — Page","text":"Create new Page object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Page.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Page Test — Page","text":"","code":"Page$new(   type = c(\"permu\", \"asymp\"),   alternative = c(\"two_sided\", \"less\", \"greater\"),   n_permu = 10000 )"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Page Test — Page","text":"type character string specifying way calculate p-value. alternative character string specifying alternative hypothesis. n_permu integer indicating number permutations permutation distribution. set 0, permutations used.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Page.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Page Test — Page","text":"Page object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Page.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Page Test — Page","text":"","code":"t <- pmt(     \"rcbd.page\", alternative = \"less\" )$test(Table4.4.3)  t$type <- \"asymp\" t #>  #>  \t Page Test  #>  #> scoring: rank    type: asymp    method: default #> statistic = 134, p-value = 0.01182581 #> alternative hypothesis: less"},{"path":"https://qddyy.github.io/LearnNonparam/reference/PairedDifference.html","id":null,"dir":"Reference","previous_headings":"","what":"Paired Comparison Based on Differences — PairedDifference","title":"Paired Comparison Based on Differences — PairedDifference","text":"Performs differences based paired comparison samples.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/PairedDifference.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Paired Comparison Based on Differences — PairedDifference","text":"LearnNonparam::PermuTest -> LearnNonparam::TwoSampleTest -> LearnNonparam::TwoSamplePairedTest -> PairedDifference","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/PairedDifference.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Paired Comparison Based on Differences — PairedDifference","text":"correct Whether apply continuity correction scoring set \"rank\".","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/PairedDifference.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Paired Comparison Based on Differences — PairedDifference","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/PairedDifference.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Paired Comparison Based on Differences — PairedDifference","text":"PairedDifference$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/PairedDifference.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Paired Comparison Based on Differences — PairedDifference","text":"Create new PairedDifference object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/PairedDifference.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paired Comparison Based on Differences — PairedDifference","text":"","code":"PairedDifference$new(   type = c(\"permu\", \"asymp\"),   method = c(\"with_zeros\", \"without_zeros\"),   scoring = c(\"none\", \"rank\", \"vw\", \"expon\"),   alternative = c(\"two_sided\", \"less\", \"greater\"),   null_value = 0,   n_permu = 10000,   correct = TRUE )"},{"path":"https://qddyy.github.io/LearnNonparam/reference/PairedDifference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paired Comparison Based on Differences — PairedDifference","text":"type character string specifying way calculate p-value. method character string specifying method ranking data computing adjusted signed scores tied data, must one \"with_zeros\" (default) \"without_zeros\". scoring character string specifying scoring system. alternative character string specifying alternative hypothesis. null_value number indicating true value location shift. n_permu integer indicating number permutations permutation distribution. set 0, permutations used. correct logical indicating whether apply continuity correction normal approximation p-value scoring set \"rank\".","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/PairedDifference.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Paired Comparison Based on Differences — PairedDifference","text":"PairedDifference object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/PairedDifference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Paired Comparison Based on Differences — PairedDifference","text":"","code":"pmt(     \"paired.difference\",     alternative = \"greater\", scoring = \"none\", n_permu = 0 )$test(Table4.1.1)$print() #>  #>  \t Paired Comparison Based on Differences  #>  #> scoring: none    type: permu(32)    method: with_zeros #> statistic = 960, p-value = 0.09375 #> alternative hypothesis: greater  pmt(     \"paired.difference\", n_permu = 0 )$test(Table4.1.3)$print() #>  #>  \t Paired Comparison Based on Differences  #>  #> scoring: none    type: permu(131072)    method: with_zeros #> statistic = 148, p-value = 0.02502441 #> alternative hypothesis: two_sided  t <- pmt(     \"paired.difference\", scoring = \"rank\",     alternative = \"greater\", n_permu = 0 )$test(Table4.1.1)$print() #>  #>  \t Paired Comparison Based on Differences  #>  #> scoring: rank    type: permu(32)    method: with_zeros #> statistic = 13, p-value = 0.09375 #> alternative hypothesis: greater  t$type <- \"asymp\" t #>  #>  \t Paired Comparison Based on Differences  #>  #> scoring: rank    type: asymp    method: with_zeros #> statistic = 13, p-value = 0.08876493 #> alternative hypothesis: greater"},{"path":"https://qddyy.github.io/LearnNonparam/reference/PermuTest.html","id":null,"dir":"Reference","previous_headings":"","what":"PermuTest Class — PermuTest","title":"PermuTest Class — PermuTest","text":"Abstract class permutation tests.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/PermuTest.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"PermuTest Class — PermuTest","text":"type way calculate p-value. method method used. scoring scoring system used. alternative alternative hypothesis. null_value hypothesized value parameter null hypothesis. conf_level confidence level interval. n_permu number permutations used. data data. statistic test statistic. p_value p-value. estimate estimated value parameter. conf_int confidence interval parameter.","code":""},{"path":[]},{"path":"https://qddyy.github.io/LearnNonparam/reference/PermuTest.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PermuTest Class — PermuTest","text":"PermuTest$test() PermuTest$print() PermuTest$plot()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/PermuTest.html","id":"method-test-","dir":"Reference","previous_headings":"","what":"Method test()","title":"PermuTest Class — PermuTest","text":"Perform test sample(s).","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/PermuTest.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PermuTest Class — PermuTest","text":"","code":"PermuTest$test(...)"},{"path":"https://qddyy.github.io/LearnNonparam/reference/PermuTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PermuTest Class — PermuTest","text":"... sample(s). Can numeric vector(s) data.frame list containing .","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/PermuTest.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PermuTest Class — PermuTest","text":"object (invisibly).","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/PermuTest.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"PermuTest Class — PermuTest","text":"Print results test.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/PermuTest.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PermuTest Class — PermuTest","text":"","code":"PermuTest$print()"},{"path":"https://qddyy.github.io/LearnNonparam/reference/PermuTest.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"PermuTest Class — PermuTest","text":"object (invisibly).","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/PermuTest.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"PermuTest Class — PermuTest","text":"Plot histogram(s) permutation distribution. Note method works type set \"permu\".","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/PermuTest.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PermuTest Class — PermuTest","text":"","code":"PermuTest$plot(style = c(\"graphics\", \"ggplot2\"), ...)"},{"path":"https://qddyy.github.io/LearnNonparam/reference/PermuTest.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PermuTest Class — PermuTest","text":"style character string specifying package use. ... passed graphics::hist.default() ggplot2::stat_bin().","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/PermuTest.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"PermuTest Class — PermuTest","text":"object (invisibly).","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile Test — Quantile","title":"Quantile Test — Quantile","text":"Performs quantile test single sample. addition, estimation confidence interval desired quantile calculated.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Quantile.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Quantile Test — Quantile","text":"LearnNonparam::PermuTest -> LearnNonparam::OneSampleTest -> Quantile","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Quantile.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Quantile Test — Quantile","text":"prob probability associated quantile. correct Whether apply continuity correction.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Quantile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Quantile Test — Quantile","text":"LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test() LearnNonparam::OneSampleTest$plot()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Quantile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Quantile Test — Quantile","text":"Quantile$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Quantile.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Quantile Test — Quantile","text":"Create new Quantile object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Quantile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile Test — Quantile","text":"","code":"Quantile$new(   type = c(\"asymp\", \"exact\"),   alternative = c(\"two_sided\", \"less\", \"greater\"),   null_value = 0,   conf_level = 0.95,   prob = 0.5,   correct = TRUE )"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile Test — Quantile","text":"type character string specifying way calculate p-value. alternative character string specifying alternative hypothesis. null_value number indicating hypothesized value quantile. conf_level number zero one indicating confidence level use. prob number zero one indicating probability associated quantile. correct logical indicating whether apply continuity correction normal approximation p-value.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Quantile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Quantile Test — Quantile","text":"Quantile object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantile Test — Quantile","text":"","code":"pmt(     \"onesample.quantile\", prob = 0.5,     null_value = 75, alternative = \"greater\",     type = \"asymp\", correct = FALSE )$test(Table1.1.1)$print() #>  #>  \t Quantile Test  #>  #> scoring: none    type: asymp    method: default #> statistic = 26, p-value = 0.02888979 #> alternative hypothesis: true 0.5 quantile is greater than 75 #> estimate: 75.35 #> 95% confidence interval: (75, 77.1)  pmt(     \"onesample.quantile\",     prob = 0.25, conf_level = 0.90 )$test(Table1.2.1)$conf_int #> [1] 11 29"},{"path":"https://qddyy.github.io/LearnNonparam/reference/RCBDOneWay.html","id":null,"dir":"Reference","previous_headings":"","what":"One-Way Test for Equal Means in RCBD — RCBDOneWay","title":"One-Way Test for Equal Means in RCBD — RCBDOneWay","text":"Performs F statistic based one-way test samples collected randomized complete block design.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/RCBDOneWay.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"One-Way Test for Equal Means in RCBD — RCBDOneWay","text":"LearnNonparam::PermuTest -> LearnNonparam::RCBDTest -> RCBDOneWay","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/RCBDOneWay.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"One-Way Test for Equal Means in RCBD — RCBDOneWay","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/RCBDOneWay.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"One-Way Test for Equal Means in RCBD — RCBDOneWay","text":"RCBDOneWay$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/RCBDOneWay.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"One-Way Test for Equal Means in RCBD — RCBDOneWay","text":"Create new RCBDOneWay object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/RCBDOneWay.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-Way Test for Equal Means in RCBD — RCBDOneWay","text":"","code":"RCBDOneWay$new(type = c(\"permu\", \"asymp\"), n_permu = 10000)"},{"path":"https://qddyy.github.io/LearnNonparam/reference/RCBDOneWay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One-Way Test for Equal Means in RCBD — RCBDOneWay","text":"type character string specifying way calculate p-value. n_permu integer indicating number permutations permutation distribution. set 0, permutations used.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/RCBDOneWay.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"One-Way Test for Equal Means in RCBD — RCBDOneWay","text":"RCBDOneWay object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/RCBDOneWay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"One-Way Test for Equal Means in RCBD — RCBDOneWay","text":"","code":"t <- pmt(     \"rcbd.oneway\", n_permu = 5000 )$test(Table4.4.3)$print() #>  #>  \t One-Way Test for Equal Means in RCBD  #>  #> scoring: none    type: permu(5000)    method: default #> statistic = 110241.8, p-value = 0.0598 (± 0.006572397 at 95% confidence)  t$type <- \"asymp\" t #>  #>  \t One-Way Test for Equal Means in RCBD  #>  #> scoring: none    type: asymp    method: default #> statistic = 3.121093, p-value = 0.057516"},{"path":"https://qddyy.github.io/LearnNonparam/reference/RCBDTest.html","id":null,"dir":"Reference","previous_headings":"","what":"RCBDTest Class — RCBDTest","title":"RCBDTest Class — RCBDTest","text":"Abstract class tests samples collected randomized complete block designs.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/RCBDTest.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"RCBDTest Class — RCBDTest","text":"LearnNonparam::PermuTest -> RCBDTest","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/RatioMeanDeviance.html","id":null,"dir":"Reference","previous_headings":"","what":"Ratio Mean Deviance Test — RatioMeanDeviance","title":"Ratio Mean Deviance Test — RatioMeanDeviance","text":"Performs ratio mean deviance test samples.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/RatioMeanDeviance.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Ratio Mean Deviance Test — RatioMeanDeviance","text":"LearnNonparam::PermuTest -> LearnNonparam::TwoSampleTest -> RatioMeanDeviance","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/RatioMeanDeviance.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Ratio Mean Deviance Test — RatioMeanDeviance","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/RatioMeanDeviance.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Ratio Mean Deviance Test — RatioMeanDeviance","text":"RatioMeanDeviance$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/RatioMeanDeviance.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Ratio Mean Deviance Test — RatioMeanDeviance","text":"Create new RatioMeanDeviance object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/RatioMeanDeviance.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ratio Mean Deviance Test — RatioMeanDeviance","text":"","code":"RatioMeanDeviance$new(   alternative = c(\"two_sided\", \"less\", \"greater\"),   n_permu = 10000 )"},{"path":"https://qddyy.github.io/LearnNonparam/reference/RatioMeanDeviance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ratio Mean Deviance Test — RatioMeanDeviance","text":"alternative character string specifying alternative hypothesis. n_permu integer indicating number permutations permutation distribution. set 0, permutations used.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/RatioMeanDeviance.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Ratio Mean Deviance Test — RatioMeanDeviance","text":"RatioMeanDeviance object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/RatioMeanDeviance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ratio Mean Deviance Test — RatioMeanDeviance","text":"","code":"pmt(     \"twosample.rmd\",     alternative = \"greater\", n_permu = 0 )$test(Table2.8.1)$print() #>  #>  \t Ratio Mean Deviance Test  #>  #> scoring: none    type: permu(252)    method: default #> statistic = 4.666667, p-value = 0.06349206 #> alternative hypothesis: true ratio of scales is greater than 1"},{"path":"https://qddyy.github.io/LearnNonparam/reference/ScoreSum.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-Sample Test Based on Sum of Scores — ScoreSum","title":"Two-Sample Test Based on Sum of Scores — ScoreSum","text":"Performs sum scores based two-sample test samples. almost two-sample wilcoxon rank sum test uses scoring systems.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/ScoreSum.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Two-Sample Test Based on Sum of Scores — ScoreSum","text":"LearnNonparam::PermuTest -> LearnNonparam::TwoSampleTest -> LearnNonparam::TwoSampleLocationTest -> ScoreSum","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/ScoreSum.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Two-Sample Test Based on Sum of Scores — ScoreSum","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/ScoreSum.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Two-Sample Test Based on Sum of Scores — ScoreSum","text":"ScoreSum$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/ScoreSum.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Two-Sample Test Based on Sum of Scores — ScoreSum","text":"Create new ScoreSum object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/ScoreSum.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-Sample Test Based on Sum of Scores — ScoreSum","text":"","code":"ScoreSum$new(   scoring = c(\"rank\", \"vw\", \"expon\"),   alternative = c(\"two_sided\", \"less\", \"greater\"),   null_value = 0,   n_permu = 10000 )"},{"path":"https://qddyy.github.io/LearnNonparam/reference/ScoreSum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-Sample Test Based on Sum of Scores — ScoreSum","text":"scoring character string specifying scoring system. alternative character string specifying alternative hypothesis. null_value number indicating true value location shift. n_permu integer indicating number permutations permutation distribution. set 0, permutations used.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/ScoreSum.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Two-Sample Test Based on Sum of Scores — ScoreSum","text":"ScoreSum object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/ScoreSum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-Sample Test Based on Sum of Scores — ScoreSum","text":"","code":"pmt(     \"twosample.scoresum\", scoring = \"expon\",     alternative = \"greater\", n_permu = 0 )$test(Table2.6.2)$print() #>  #>  \t Two-Sample Test Based on Sum of Scores  #>  #> scoring: expon    type: permu(924)    method: default #> statistic = 9.752597, p-value = 0.002164502 #> alternative hypothesis: greater"},{"path":"https://qddyy.github.io/LearnNonparam/reference/SiegelTukey.html","id":null,"dir":"Reference","previous_headings":"","what":"Siegel-Tukey Test — SiegelTukey","title":"Siegel-Tukey Test — SiegelTukey","text":"Performs Siegel-Tukey test samples.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/SiegelTukey.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Siegel-Tukey Test — SiegelTukey","text":"LearnNonparam::PermuTest -> LearnNonparam::TwoSampleTest -> LearnNonparam::TwoSampleLocationTest -> LearnNonparam::Wilcoxon -> SiegelTukey","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/SiegelTukey.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Siegel-Tukey Test — SiegelTukey","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/SiegelTukey.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Siegel-Tukey Test — SiegelTukey","text":"SiegelTukey$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/SiegelTukey.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Siegel-Tukey Test — SiegelTukey","text":"Create new SiegelTukey object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/SiegelTukey.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Siegel-Tukey Test — SiegelTukey","text":"","code":"SiegelTukey$new(   type = c(\"permu\", \"asymp\"),   alternative = c(\"two_sided\", \"less\", \"greater\"),   n_permu = 10000,   correct = TRUE )"},{"path":"https://qddyy.github.io/LearnNonparam/reference/SiegelTukey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Siegel-Tukey Test — SiegelTukey","text":"type character string specifying way calculate p-value. alternative character string specifying alternative hypothesis. n_permu integer indicating number permutations permutation distribution. set 0, permutations used. correct logical indicating whether apply continuity correction normal approximation p-value.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/SiegelTukey.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Siegel-Tukey Test — SiegelTukey","text":"SiegelTukey object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/SiegelTukey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Siegel-Tukey Test — SiegelTukey","text":"","code":"pmt(     \"twosample.siegel\",     alternative = \"greater\", n_permu = 0 )$test(Table2.8.1)$print() #>  #>  \t Siegel-Tukey Test  #>  #> scoring: Siegel-Tukey rank    type: permu(252)    method: default #> statistic = 24, p-value = 0.2738095 #> alternative hypothesis: true ratio of scales is greater than 1"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Sign.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-Sample Sign Test — Sign","title":"Two-Sample Sign Test — Sign","text":"Performs two-sample sign test samples.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Sign.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Two-Sample Sign Test — Sign","text":"LearnNonparam::PermuTest -> LearnNonparam::TwoSampleTest -> LearnNonparam::TwoSamplePairedTest -> Sign","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Sign.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Two-Sample Sign Test — Sign","text":"correct Whether apply continuity correction.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Sign.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Two-Sample Sign Test — Sign","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Sign.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Two-Sample Sign Test — Sign","text":"Sign$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Sign.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Two-Sample Sign Test — Sign","text":"Create new Sign object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Sign.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-Sample Sign Test — Sign","text":"","code":"Sign$new(   type = c(\"permu\", \"asymp\"),   alternative = c(\"two_sided\", \"less\", \"greater\"),   n_permu = 10000,   correct = TRUE )"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Sign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-Sample Sign Test — Sign","text":"type character string specifying way calculate p-value. alternative character string specifying alternative hypothesis. n_permu integer indicating number permutations permutation distribution. set 0, permutations used. correct logical indicating whether apply continuity correction normal approximation p-value.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Sign.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Two-Sample Sign Test — Sign","text":"Sign object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Sign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-Sample Sign Test — Sign","text":"","code":"t <- pmt(     \"paired.sign\",     alternative = \"greater\", n_permu = 0 )$test(     rep(c(+1, -1), c(12, 5)), rep(0, 17) )$print() #>  #>  \t Two-Sample Sign Test  #>  #> scoring: none    type: permu(131072)    method: default #> statistic = 12, p-value = 0.07173157 #> alternative hypothesis: greater  t$type <- \"asymp\" t #>  #>  \t Two-Sample Sign Test  #>  #> scoring: none    type: asymp    method: default #> statistic = 12, p-value = 0.07280505 #> alternative hypothesis: greater"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Studentized.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple Comparison Based on Studentized Statistic — Studentized","title":"Multiple Comparison Based on Studentized Statistic — Studentized","text":"Performs studentized statistic based multiple comparison samples.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Studentized.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Multiple Comparison Based on Studentized Statistic — Studentized","text":"LearnNonparam::PermuTest -> LearnNonparam::KSampleTest -> LearnNonparam::MultipleComparison -> Studentized","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Studentized.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Multiple Comparison Based on Studentized Statistic — Studentized","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Studentized.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Multiple Comparison Based on Studentized Statistic — Studentized","text":"Studentized$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Studentized.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Multiple Comparison Based on Studentized Statistic — Studentized","text":"Create new Studentized object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Studentized.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple Comparison Based on Studentized Statistic — Studentized","text":"","code":"Studentized$new(   type = c(\"permu\", \"asymp\"),   method = c(\"bonferroni\", \"tukey\"),   scoring = c(\"none\", \"rank\", \"vw\", \"expon\"),   conf_level = 0.95,   n_permu = 10000 )"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Studentized.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple Comparison Based on Studentized Statistic — Studentized","text":"type character string specifying way calculate p-value. method character string specifying whether use Bonferroni's method Tukey's HSD method. scoring character string specifying scoring system. conf_level number zero one indicating family-wise confidence level use. n_permu integer indicating number permutations permutation distribution. set 0, permutations used.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Studentized.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Multiple Comparison Based on Studentized Statistic — Studentized","text":"Studentized object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Studentized.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiple Comparison Based on Studentized Statistic — Studentized","text":"","code":"t <- pmt(     \"multcomp.studentized\", method = \"bonferroni\" )$test(Table3.3.1)$print() #>  #> \t Multiple Comparison Based on Studentized Statistic  #>  #> scoring: none    type: permu(10000)    method: bonferroni #>  #> family-wise confidence level: 95% #>  #>                           statistic p-value   #> location_1 ~ location_2  0.02737145  0.9754   #> location_1 ~ location_3 -1.77914406  0.0844   #> location_1 ~ location_4 -3.41048230  0.0018 * #> location_2 ~ location_3 -1.80651550  0.0868   #> location_2 ~ location_4 -3.43785375  0.0018 * #> location_3 ~ location_4 -1.63133824  0.1154    t$type <- \"asymp\" t #>  #> \t Multiple Comparison Based on Studentized Statistic  #>  #> scoring: none    type: asymp    method: bonferroni #>  #> family-wise confidence level: 95% #>  #>                           statistic     p-value   #> location_1 ~ location_2  0.02737145 0.978434752   #> location_1 ~ location_3 -1.77914406 0.090419680   #> location_1 ~ location_4 -3.41048230 0.002773484 * #> location_2 ~ location_3 -1.80651550 0.085909110   #> location_2 ~ location_4 -3.43785375 0.002603664 * #> location_3 ~ location_4 -1.63133824 0.118466249    t$scoring <- \"rank\" t #>  #> \t Multiple Comparison Based on Studentized Statistic  #>  #> scoring: rank    type: asymp    method: bonferroni #>  #> family-wise confidence level: 95% #>  #>                          statistic     p-value   #> location_1 ~ location_2  0.1224745 0.902523250   #> location_1 ~ location_3 -1.3880442 0.165123590   #> location_1 ~ location_4 -2.6536139 0.007963489 * #> location_2 ~ location_3 -1.5105187 0.130911128   #> location_2 ~ location_4 -2.7760884 0.005501725 * #> location_3 ~ location_4 -1.2655697 0.205667180    t$method <- \"tukey\" t #>  #> \t Multiple Comparison Based on Studentized Statistic  #>  #> scoring: rank    type: asymp    method: tukey #>  #> family-wise confidence level: 95% #>  #>                         statistic    p-value   #> location_1 ~ location_2 0.1732051 0.99934385   #> location_1 ~ location_3 1.9629909 0.50683497   #> location_1 ~ location_4 3.7527767 0.03978340 * #> location_2 ~ location_3 2.1361960 0.43109997   #> location_2 ~ location_4 3.9259818 0.02817015 * #> location_3 ~ location_4 1.7897858 0.58494735    t$scoring <- \"none\" t #>  #> \t Multiple Comparison Based on Studentized Statistic  #>  #> scoring: none    type: asymp    method: tukey #>  #> family-wise confidence level: 95% #>  #>                          statistic    p-value   #> location_1 ~ location_2 0.03870907 0.99999236   #> location_1 ~ location_3 2.51608965 0.31194094   #> location_1 ~ location_4 4.82315032 0.01356971 * #> location_2 ~ location_3 2.55479873 0.29951264   #> location_2 ~ location_4 4.86185939 0.01277452 * #> location_3 ~ location_4 2.30706067 0.38453323    t$type <- \"permu\" t #>  #> \t Multiple Comparison Based on Studentized Statistic  #>  #> scoring: none    type: permu(10000)    method: tukey #>  #> family-wise confidence level: 95% #>  #>                          statistic p-value   #> location_1 ~ location_2 0.03870907  1.0000   #> location_1 ~ location_3 2.51608965  0.3172   #> location_1 ~ location_4 4.82315032  0.0150 * #> location_2 ~ location_3 2.55479873  0.3052   #> location_2 ~ location_4 4.86185939  0.0143 * #> location_3 ~ location_4 2.30706067  0.3921"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table1.1.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Sodium Contents — Table1.1.1","title":"Sodium Contents — Table1.1.1","text":"Sodium contents (mg) 40 servings food product.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table1.1.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sodium Contents — Table1.1.1","text":"","code":"Table1.1.1"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table1.1.1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sodium Contents — Table1.1.1","text":"object class numeric length 40.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table1.1.1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sodium Contents — Table1.1.1","text":"Table 1.1.1","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table1.2.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Cycles Until Failure — Table1.2.1","title":"Cycles Until Failure — Table1.2.1","text":"number cycles (thousands) takes 20 door latches fail.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table1.2.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cycles Until Failure — Table1.2.1","text":"","code":"Table1.2.1"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table1.2.1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cycles Until Failure — Table1.2.1","text":"object class numeric length 20.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table1.2.1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cycles Until Failure — Table1.2.1","text":"Table 1.2.1","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.1.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Scores — Table2.1.1","title":"Test Scores — Table2.1.1","text":"Test scores 7 employees comparison methods instruction.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.1.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Scores — Table2.1.1","text":"","code":"Table2.1.1"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.1.1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Test Scores — Table2.1.1","text":"object class list length 2.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.1.1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Test Scores — Table2.1.1","text":"Table 2.1.1","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.3.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Runoff Minutes — Table2.3.1","title":"Runoff Minutes — Table2.3.1","text":"numbers minutes took obtain various amounts runoff plot.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.3.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runoff Minutes — Table2.3.1","text":"","code":"Table2.3.1"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.3.1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Runoff Minutes — Table2.3.1","text":"object class data.frame 8 rows 2 columns.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.3.1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Runoff Minutes — Table2.3.1","text":"Table 2.3.1","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.6.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Hours Until Recharge — Table2.6.1","title":"Hours Until Recharge — Table2.6.1","text":"numbers hours 2 brands laptop computers function battery recharging necessary.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.6.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hours Until Recharge — Table2.6.1","text":"","code":"Table2.6.1"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.6.1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hours Until Recharge — Table2.6.1","text":"object class data.frame 4 rows 2 columns.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.6.1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Hours Until Recharge — Table2.6.1","text":"Table 2.6.1","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.6.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Cerium Amounts — Table2.6.2","title":"Cerium Amounts — Table2.6.2","text":"amounts cerium measured samples granite basalt.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.6.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cerium Amounts — Table2.6.2","text":"","code":"Table2.6.2"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.6.2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cerium Amounts — Table2.6.2","text":"object class data.frame 6 rows 2 columns.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.6.2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cerium Amounts — Table2.6.2","text":"Table 2.6.2","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.8.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Ounces Of Beverage — Table2.8.1","title":"Ounces Of Beverage — Table2.8.1","text":"amounts liquid randomly selected beverage containers filling process repaired.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.8.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ounces Of Beverage — Table2.8.1","text":"","code":"Table2.8.1"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.8.1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ounces Of Beverage — Table2.8.1","text":"object class data.frame 5 rows 2 columns.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table2.8.1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ounces Of Beverage — Table2.8.1","text":"Table 2.8.1","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.1.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Normal Samples — Table3.1.2","title":"Normal Samples — Table3.1.2","text":"Observations randomly sampled normal populations means 15, 25 30, respectively, standard deviation 9.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.1.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normal Samples — Table3.1.2","text":"","code":"Table3.1.2"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.1.2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Normal Samples — Table3.1.2","text":"object class data.frame 5 rows 3 columns.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.1.2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Normal Samples — Table3.1.2","text":"Table 3.1.2","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.2.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithms of Bacteria Counts — Table3.2.2","title":"Logarithms of Bacteria Counts — Table3.2.2","text":"Logarithms counts bacteria 4 samples, respectively treated 3 kills left untreated control.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.2.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithms of Bacteria Counts — Table3.2.2","text":"","code":"Table3.2.2"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.2.2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Logarithms of Bacteria Counts — Table3.2.2","text":"object class list length 4.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.2.2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Logarithms of Bacteria Counts — Table3.2.2","text":"Table 3.2.2","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.2.3.html","id":null,"dir":"Reference","previous_headings":"","what":"Saltiness Scores — Table3.2.3","title":"Saltiness Scores — Table3.2.3","text":"Saltiness scores, scale 1 5, assigned taste expert samples 3 food products differ amounts soymeal contain.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.2.3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saltiness Scores — Table3.2.3","text":"","code":"Table3.2.3"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.2.3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Saltiness Scores — Table3.2.3","text":"object class list length 3.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.2.3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Saltiness Scores — Table3.2.3","text":"Table 3.2.3","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.3.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Percentages of Clay — Table3.3.1","title":"Percentages of Clay — Table3.3.1","text":"percentages clay 6 samples soil selected 4 locations.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.3.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percentages of Clay — Table3.3.1","text":"","code":"Table3.3.1"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.3.1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Percentages of Clay — Table3.3.1","text":"object class data.frame 6 rows 4 columns.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.3.1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Percentages of Clay — Table3.3.1","text":"Table 3.3.1","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.4.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Phosphorus Contents — Table3.4.1","title":"Phosphorus Contents — Table3.4.1","text":"Phosphorus contents plants 4 mowing treatments.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.4.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phosphorus Contents — Table3.4.1","text":"","code":"Table3.4.1"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.4.1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Phosphorus Contents — Table3.4.1","text":"object class data.frame 6 rows 4 columns.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table3.4.1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Phosphorus Contents — Table3.4.1","text":"Table 3.4.1","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table4.1.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Caloric Intake — Table4.1.1","title":"Caloric Intake — Table4.1.1","text":"estimated daily caloric intake dietary information provided using 2 methods group college women.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table4.1.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Caloric Intake — Table4.1.1","text":"","code":"Table4.1.1"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table4.1.1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Caloric Intake — Table4.1.1","text":"object class data.frame 5 rows 2 columns.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table4.1.1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Caloric Intake — Table4.1.1","text":"Table 4.1.1","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table4.1.3.html","id":null,"dir":"Reference","previous_headings":"","what":"Cholesterol Reduction — Table4.1.3","title":"Cholesterol Reduction — Table4.1.3","text":"Reduction cholesterol twins given 2 drugs separately.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table4.1.3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cholesterol Reduction — Table4.1.3","text":"","code":"Table4.1.3"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table4.1.3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cholesterol Reduction — Table4.1.3","text":"object class data.frame 17 rows 2 columns.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table4.1.3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cholesterol Reduction — Table4.1.3","text":"Table 4.1.3","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table4.4.3.html","id":null,"dir":"Reference","previous_headings":"","what":"Yield Data — Table4.4.3","title":"Yield Data — Table4.4.3","text":"Yield data randomized complete block design 4 different types tractors used tilling soil. blocking factor location fields.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table4.4.3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Yield Data — Table4.4.3","text":"","code":"Table4.4.3"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table4.4.3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Yield Data — Table4.4.3","text":"object class data.frame 4 rows 6 columns.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table4.4.3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Yield Data — Table4.4.3","text":"Table 4.4.3","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table4.5.3.html","id":null,"dir":"Reference","previous_headings":"","what":"Randomized Complete Block with Ties — Table4.5.3","title":"Randomized Complete Block with Ties — Table4.5.3","text":"randomized complete block design 4 treatments 3 blocks.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table4.5.3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Randomized Complete Block with Ties — Table4.5.3","text":"","code":"Table4.5.3"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table4.5.3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Randomized Complete Block with Ties — Table4.5.3","text":"object class data.frame 4 rows 3 columns.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table4.5.3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Randomized Complete Block with Ties — Table4.5.3","text":"Table 4.5.3","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table5.1.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Heterophils and Lymphocytes — Table5.1.2","title":"Heterophils and Lymphocytes — Table5.1.2","text":"Counts heterophils lymphocytes blood samples 18 healthy rabbits.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table5.1.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heterophils and Lymphocytes — Table5.1.2","text":"","code":"Table5.1.2"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table5.1.2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Heterophils and Lymphocytes — Table5.1.2","text":"object class data.frame 18 rows 2 columns.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table5.1.2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Heterophils and Lymphocytes — Table5.1.2","text":"Table5.1.2","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table5.2.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Scores of Projects — Table5.2.2","title":"Scores of Projects — Table5.2.2","text":"Scores 10 projects science fair.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table5.2.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scores of Projects — Table5.2.2","text":"","code":"Table5.2.2"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table5.2.2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Scores of Projects — Table5.2.2","text":"object class data.frame 10 rows 2 columns.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table5.2.2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Scores of Projects — Table5.2.2","text":"Table5.2.2","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table5.4.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Satisfaction with Pain-Relief Treatment — Table5.4.2","title":"Satisfaction with Pain-Relief Treatment — Table5.4.2","text":"Patients' responses 2 methods relieving postoperative pain.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table5.4.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Satisfaction with Pain-Relief Treatment — Table5.4.2","text":"","code":"Table5.4.2"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table5.4.2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Satisfaction with Pain-Relief Treatment — Table5.4.2","text":"object class data.frame 2 rows 3 columns.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Table5.4.2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Satisfaction with Pain-Relief Treatment — Table5.4.2","text":"Table5.4.2","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/TwoSampleAssociationTest.html","id":null,"dir":"Reference","previous_headings":"","what":"TwoSampleAssociationTest Class — TwoSampleAssociationTest","title":"TwoSampleAssociationTest Class — TwoSampleAssociationTest","text":"Abstract class two-sample association tests.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/TwoSampleAssociationTest.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"TwoSampleAssociationTest Class — TwoSampleAssociationTest","text":"LearnNonparam::PermuTest -> LearnNonparam::TwoSampleTest -> LearnNonparam::TwoSamplePairedTest -> TwoSampleAssociationTest","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/TwoSampleLocationTest.html","id":null,"dir":"Reference","previous_headings":"","what":"TwoSampleLocationTest Class — TwoSampleLocationTest","title":"TwoSampleLocationTest Class — TwoSampleLocationTest","text":"Abstract class two-sample location tests.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/TwoSampleLocationTest.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"TwoSampleLocationTest Class — TwoSampleLocationTest","text":"LearnNonparam::PermuTest -> LearnNonparam::TwoSampleTest -> TwoSampleLocationTest","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/TwoSamplePairedTest.html","id":null,"dir":"Reference","previous_headings":"","what":"TwoSamplePairedTest Class — TwoSamplePairedTest","title":"TwoSamplePairedTest Class — TwoSamplePairedTest","text":"Abstract class paired two-sample tests.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/TwoSamplePairedTest.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"TwoSamplePairedTest Class — TwoSamplePairedTest","text":"LearnNonparam::PermuTest -> LearnNonparam::TwoSampleTest -> TwoSamplePairedTest","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/TwoSampleTest.html","id":null,"dir":"Reference","previous_headings":"","what":"TwoSampleTest Class — TwoSampleTest","title":"TwoSampleTest Class — TwoSampleTest","text":"Abstract class two-sample tests.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/TwoSampleTest.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TwoSampleTest Class — TwoSampleTest","text":"LearnNonparam::PermuTest -> TwoSampleTest","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Wilcoxon.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-Sample Wilcoxon Test — Wilcoxon","title":"Two-Sample Wilcoxon Test — Wilcoxon","text":"Performs two-sample wilcoxon test samples. addition, estimation confidence interval location shift calculated.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Wilcoxon.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Two-Sample Wilcoxon Test — Wilcoxon","text":"LearnNonparam::PermuTest -> LearnNonparam::TwoSampleTest -> LearnNonparam::TwoSampleLocationTest -> Wilcoxon","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Wilcoxon.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Two-Sample Wilcoxon Test — Wilcoxon","text":"correct Whether apply continuity correction.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Wilcoxon.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Two-Sample Wilcoxon Test — Wilcoxon","text":"LearnNonparam::PermuTest$plot() LearnNonparam::PermuTest$print() LearnNonparam::PermuTest$test()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Wilcoxon.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Two-Sample Wilcoxon Test — Wilcoxon","text":"Wilcoxon$new()","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Wilcoxon.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Two-Sample Wilcoxon Test — Wilcoxon","text":"Create new Wilcoxon object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Wilcoxon.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-Sample Wilcoxon Test — Wilcoxon","text":"","code":"Wilcoxon$new(   type = c(\"permu\", \"asymp\"),   alternative = c(\"two_sided\", \"less\", \"greater\"),   null_value = 0,   conf_level = 0.95,   n_permu = 10000,   correct = TRUE )"},{"path":"https://qddyy.github.io/LearnNonparam/reference/Wilcoxon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-Sample Wilcoxon Test — Wilcoxon","text":"type character string specifying way calculate p-value. alternative character string specifying alternative hypothesis. null_value number indicating true value location shift. conf_level number zero one indicating confidence level use. n_permu integer indicating number permutations permutation distribution. set 0, permutations used. correct logical indicating whether apply continuity correction normal approximation p-value.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Wilcoxon.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Two-Sample Wilcoxon Test — Wilcoxon","text":"Wilcoxon object.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/Wilcoxon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-Sample Wilcoxon Test — Wilcoxon","text":"","code":"pmt(     \"twosample.wilcoxon\",     alternative = \"greater\", n_permu = 0 )$test(Table2.1.1)$print() #>  #>  \t Two-Sample Wilcoxon Test  #>  #> scoring: rank    type: permu(35)    method: default #> statistic = 21, p-value = 0.05714286 #> alternative hypothesis: true location shift is greater than 0 #> estimate: 16 #> 95% confidence interval: (-Inf, Inf)  pmt(     \"twosample.wilcoxon\",     alternative = \"less\", n_permu = 0 )$test(Table2.6.1)$print() #>  #>  \t Two-Sample Wilcoxon Test  #>  #> scoring: rank    type: permu(70)    method: default #> statistic = 14, p-value = 0.1714286 #> alternative hypothesis: true location shift is less than 0 #> estimate: -0.35 #> 95% confidence interval: (-1.2, 0.5)  pmt(     \"twosample.wilcoxon\", conf_level = 0.90 )$test(Table2.6.2)$conf_int #> [1] 13.84 47.96"},{"path":"https://qddyy.github.io/LearnNonparam/reference/pmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar for Object Construction — pmt","title":"Syntactic Sugar for Object Construction — pmt","text":"Construct test objects unified way.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/pmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar for Object Construction — pmt","text":"","code":"pmt(key, ...)  pmts(   which = c(\"all\", \"onesample\", \"twosample\", \"ksample\", \"multcomp\", \"paired\", \"rcbd\",     \"association\", \"table\") )  define_pmt(   inherit = c(\"twosample\", \"ksample\", \"paired\", \"rcbd\", \"association\", \"table\"),   statistic,   rejection = c(\"lr\", \"l\", \"r\"),   scoring = \"none\",   n_permu = 10000,   name = \"User-Defined Permutation Test\",   alternative = NULL,   depends = character(),   plugins = character(),   includes = character() )"},{"path":"https://qddyy.github.io/LearnNonparam/reference/pmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar for Object Construction — pmt","text":"key character string specifying test. Check pmts() valid keys. ... extra parameters passed constructor. character string specifying desired tests. inherit character string specifying type permutation test. statistic definition test statistic. See Details. rejection character string specifying rejection region . scoring one : - character string c(\"none\", \"rank\", \"vw\", \"expon\") specifying scoring system - function takes numeric vector returns equal-length score vector n_permu integer indicating number permutations permutation distribution. set 0, permutations used. name character string specifying name test. alternative character string describing alternative hypothesis. depends, plugins, includes passed Rcpp::cppFunction().","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/pmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syntactic Sugar for Object Construction — pmt","text":"test object corresponding specified key. data frame containing keys corresponding tests implemented package. test object based specified statistic.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/pmt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Syntactic Sugar for Object Construction — pmt","text":"test statistic can defined using either R Rcpp, statistic parameter specified : R: function returning closure returns double. Rcpp: character string defining captureless lambda (since C++11) returning another lambda captures value, accepts parameters type const references, returns double. using Rcpp, parameters different inherit listed follows. Note parameter names illustration . \"twosample\": (Rcpp::NumericVector sample_1, Rcpp::NumericVector sample_2) \"ksample\": (Rcpp::NumericVector combined_sample, Rcpp::IntegerVector one_based_group_index) \"paired\": (Rcpp::NumericVector sample_1, Rcpp::NumericVector sample_2) \"rcbd\": (Rcpp::NumericMatrix block_as_column_data) \"association\": (Rcpp::NumericVector sample_1, Rcpp::NumericVector sample_2) \"table\": (Rcpp::IntegerMatrix contingency_table) Defining test statistic using R follows similar approach. purpose design pre-calculate certain constants remain invariant permutation.","code":""},{"path":"https://qddyy.github.io/LearnNonparam/reference/pmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Syntactic Sugar for Object Construction — pmt","text":"","code":"pmt(\"twosample.wilcoxon\") #> <Wilcoxon> #>   Inherits from: <TwoSampleLocationTest> #>   Public: #>     alternative: active binding #>     conf_int: active binding #>     conf_level: active binding #>     correct: active binding #>     data: active binding #>     estimate: active binding #>     initialize: function (type = c(\"permu\", \"asymp\"), alternative = c(\"two_sided\",  #>     method: active binding #>     n_permu: active binding #>     null_value: active binding #>     p_value: active binding #>     plot: function (style = c(\"graphics\", \"ggplot2\"), ...)  #>     print: function ()  #>     scoring: active binding #>     statistic: active binding #>     test: function (...)  #>     type: active binding #>   Private: #>     .alternative: two_sided #>     .autoplot: function (...)  #>     .calculate: function ()  #>     .calculate_extra: function ()  #>     .calculate_n_permu: function ()  #>     .calculate_p: function ()  #>     .calculate_p_permu: function ()  #>     .calculate_score: function ()  #>     .calculate_side: function ()  #>     .calculate_statistic: function ()  #>     .compile_statistic_closure: function ()  #>     .conf_int: NULL #>     .conf_level: 0.95 #>     .correct: TRUE #>     .data: NULL #>     .define: function ()  #>     .estimate: NULL #>     .link: + #>     .method: default #>     .n_permu: 10000 #>     .name: Two-Sample Wilcoxon Test #>     .null_value: 0 #>     .on_alternative_change: function ()  #>     .on_conf_level_change: function ()  #>     .on_method_change: function ()  #>     .on_n_permu_change: function ()  #>     .on_null_value_change: function ()  #>     .on_scoring_change: function ()  #>     .on_type_change: function ()  #>     .p_value: NULL #>     .param_name: location shift #>     .plot: function (...)  #>     .preprocess: function ()  #>     .print: function ()  #>     .raw_data: NULL #>     .scoring: rank #>     .side: NULL #>     .statistic: NULL #>     .statistic_func: NULL #>     .type: permu  pmts(\"ksample\") #>              key              class                         test #> 1 ksample.oneway             OneWay One-Way Test for Equal Means #> 2     ksample.kw      KruskalWallis          Kruskal-Wallis Test #> 3     ksample.jt JonckheereTerpstra     Jonckheere-Terpstra Test  x <- rnorm(5) y <- rnorm(5, 1)  t <- define_pmt(     inherit = \"twosample\",     scoring = base::rank, # equivalent to \"rank\"     statistic = function(...) function(x, y) sum(x) )$test(x, y)$print() #>  #>  \t User-Defined Permutation Test  #>  #> scoring: custom    type: permu(10000)    method: default #> statistic = 19, p-value = 0.09 (± 0.005609059 at 95% confidence)  t$scoring <- function(x) qnorm(rank(x) / (length(x) + 1)) # equivalent to \"vw\" t$print() #>  #>  \t User-Defined Permutation Test  #>  #> scoring: custom    type: permu(10000)    method: default #> statistic = -2.38528, p-value = 0.0654 (± 0.004845626 at 95% confidence)  t$n_permu <- 0 t$print() #>  #>  \t User-Defined Permutation Test  #>  #> scoring: custom    type: permu(252)    method: default #> statistic = -2.38528, p-value = 0.06349206  # \\donttest{ r <- define_pmt(     inherit = \"twosample\",     n_permu = 1e5,     statistic = function(x, y) {         m <- length(x)         n <- length(y)         function(x, y) sum(x) / m - sum(y) / n     } )  rcpp <- define_pmt(     inherit = \"twosample\",     n_permu = 1e5,     statistic = \"[](NumericVector x, NumericVector y) {         R_len_t m = x.size();         R_len_t n = y.size();         return [=](const NumericVector& x, const NumericVector& y) -> double {             return sum(x) / m - sum(y) / n;         };     }\" )  options(LearnNonparam.pmt_progress = FALSE) system.time(r$test(x, y)) #>    user  system elapsed  #>   0.143   0.000   0.143  system.time(rcpp$test(x, y)) #>    user  system elapsed  #>   0.009   0.000   0.009  # }"},{"path":"https://qddyy.github.io/LearnNonparam/news/index.html","id":"learnnonparam-125","dir":"Changelog","previous_headings":"","what":"LearnNonparam 1.2.5","title":"LearnNonparam 1.2.5","text":"CRAN release: 2024-11-14 Added support scoring active binding define_pmt Corrected x-axis range plot() style = \"graphics\" Improved performance PairedDifference","code":""},{"path":"https://qddyy.github.io/LearnNonparam/news/index.html","id":"learnnonparam-124","dir":"Changelog","previous_headings":"","what":"LearnNonparam 1.2.4","title":"LearnNonparam 1.2.4","text":"CRAN release: 2024-11-12 Added support custom scoring systems define_pmt Enabled compatibility C++ standard versions beyond C++14 define_pmt Improved performance KruskalWallis, OneWay, Studentized Replaced certain warning() calls stop() Refined text Enhanced permuting efficiency twosample_pmt","code":""},{"path":"https://qddyy.github.io/LearnNonparam/news/index.html","id":"learnnonparam-123","dir":"Changelog","previous_headings":"","what":"LearnNonparam 1.2.3","title":"LearnNonparam 1.2.3","text":"CRAN release: 2024-10-15 Improved twosample_pmt Added examples Fixed SiegelTukey ContingencyTableTest","code":""},{"path":"https://qddyy.github.io/LearnNonparam/news/index.html","id":"learnnonparam-122","dir":"Changelog","previous_headings":"","what":"LearnNonparam 1.2.2","title":"LearnNonparam 1.2.2","text":"Changed default value n_permu 1e4 Added support test statistics defined using Rcpp define_pmt Added support null_value zero two-sample location tests Added support scoring TwoSampleAssociationTest Added confidence interval p-value print() Added LearnNonparam.pmt_progress option Added attr(t$n_permu, \"n_used\") Replaced multicomp.* multcomp.* Replaced KSampleF RCBDF OneWay RCBDOneWay Stopped exporting abstract classes (TwoSampleTest, KSampleTest, etc.) Improved efficiency ChiSquare, Difference, JonckheereTerpstra, KruskalWallis, RatioMeanDeviance Studentized Fixed many bugs Introduced new progress bar, built compile time minimize runtime overhead","code":""},{"path":"https://qddyy.github.io/LearnNonparam/news/index.html","id":"learnnonparam-121","dir":"Changelog","previous_headings":"","what":"LearnNonparam 1.2.1","title":"LearnNonparam 1.2.1","text":"Added define_pmt Added error messages Added active bindings Introduced graphics alternative ggplot2 Introduced compiler::cmpfun better performance Renamed ANOVA, RCBD, RCBDANOVA SignedDiff Replaced MultiCompT TukeyHSD Studentized Replaced \"approx\" \"asymp\" Improved MultipleComparison Improved CDF$plot() Fixed many bugs new progress bar Support larger n_permu","code":""},{"path":"https://qddyy.github.io/LearnNonparam/news/index.html","id":"learnnonparam-120","dir":"Changelog","previous_headings":"","what":"LearnNonparam 1.2.0","title":"LearnNonparam 1.2.0","text":"Added logo Introduced Rcpp Replaced Mean Difference Replaced SignedScore SignedDiff Replaced PermuTest$feed() PermuTest$test() Accelerated RCBD TwoSamplePairedTest Improved print() plot() method CDF, MultipleComparison PermuTest Added \"approx\" option Quantile$type Fixed many bugs","code":""}]
