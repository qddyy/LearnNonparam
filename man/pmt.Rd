% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pmt.R
\name{pmt}
\alias{pmt}
\alias{pmts}
\alias{define_pmt}
\title{Syntactic Sugar for Object Construction}
\usage{
pmt(key, ...)

pmts(
  which = c("all", "onesample", "twosample", "ksample", "multcomp", "paired", "rcbd",
    "association", "table")
)

define_pmt(
  statistic,
  depends = character(),
  plugins = character(),
  includes = character(),
  inherit = c("twosample", "ksample", "paired", "rcbd", "association", "table"),
  rejection = c("lr", "l", "r"),
  scoring = c("none", "rank", "vw", "expon"),
  n_permu = 0L,
  name = "User-Defined Permutation Test",
  alternative = NULL
)
}
\arguments{
\item{key}{a character string corresponding to the desired test. Check \code{pmts()} for valid keys.}

\item{...}{extra parameters passed to the constructor.}

\item{which}{a character string specifying the desired tests.}

\item{statistic}{definition of the test statistic. See \code{Details}.}

\item{depends, plugins, includes}{passed to \code{Rcpp::cppFunction}.}

\item{inherit}{a character string specifying the desired permutation test.}

\item{rejection}{a character string specifying where the rejection region is.}

\item{scoring, n_permu}{passed to the constructor.}

\item{name}{a character string specifying the name of the test.}

\item{alternative}{a character string specifying the alternative of the test.}
}
\description{
Construct test objects in a unified way.
}
\details{
The test statistic in \code{define_pmt} can be defined using either \code{R} or \code{Rcpp}, with the \code{statistic} parameter specified as:
\itemize{
\item \code{R}: a closure returning another closure.
\item \code{Rcpp}: a character string defining a captureless lambda (introduced in C++11) returning another lambda that may capture by value, accepts const arguments of the same type, and returns a double.
}

When using \code{Rcpp}, the parameters for different \code{inherit} are listed as follows. Note that the parameter names are illustrative and may be modified.
\itemize{
\item \code{"twosample"}: \verb{(Rcpp::NumericVector sample_1, Rcpp::NumericVector sample_2)}
\item \code{"ksample"}: \verb{(Rcpp::NumericVector combined_sample, Rcpp::IntegerVector one_based_group_index)}
\item \code{"paired"}: \verb{(Rcpp::NumericVector sample_1, Rcpp::NumericVector sample_2)}
\item \code{"rcbd"}: \verb{(Rcpp::NumericMatrix block_as_column_data)}
\item \code{"association"}: \verb{(Rcpp::NumericVector sample_1, Rcpp::NumericVector sample_2)}
\item \code{"table"}: \verb{(Rcpp::IntegerMatrix contingency_table)}
}

Defining the test statistic using \code{R} follows a similar approach. The purpose of this design is to pre-calculate certain constants that remain invariant during permutation.
}
