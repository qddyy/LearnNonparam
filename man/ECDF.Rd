% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ECDF.R
\name{ECDF}
\alias{ECDF}
\title{Empirical Cumulative Distribution Function}
\description{
This is the abstract base class for empirical cumulative distribution function objects.
}
\section{Super classes}{
\code{\link[LearnNonparam:PermuTest]{LearnNonparam::PermuTest}} -> \code{\link[LearnNonparam:OneSampleTest]{LearnNonparam::OneSampleTest}} -> \code{ECDF}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ECDF-new}{\code{ECDF$new()}}
\item \href{#method-ECDF-plot}{\code{ECDF$plot()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="LearnNonparam" data-topic="PermuTest" data-id="feed"><a href='../../LearnNonparam/html/PermuTest.html#method-PermuTest-feed'><code>LearnNonparam::PermuTest$feed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="LearnNonparam" data-topic="PermuTest" data-id="print"><a href='../../LearnNonparam/html/PermuTest.html#method-PermuTest-print'><code>LearnNonparam::PermuTest$print()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ECDF-new"></a>}}
\if{latex}{\out{\hypertarget{method-ECDF-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{ECDF} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ECDF$new(conf_level = 0.95)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{conf_level}}{a number specifying confidence level of the interval.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{ECDF} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ECDF-plot"></a>}}
\if{latex}{\out{\hypertarget{method-ECDF-plot}{}}}
\subsection{Method \code{plot()}}{
Plot the empirical cumulative distribution function of the data fed (with confidence bounds).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ECDF$plot()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The object itself (invisibly).
}
}
}
